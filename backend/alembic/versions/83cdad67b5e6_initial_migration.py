"""Initial migration

Revision ID: 83cdad67b5e6
Revises: 
Create Date: 2025-08-22 09:16:16.307022

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '83cdad67b5e6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)

    op.create_table('topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_id', 'title', name='uq_topic_owner_title')
    )
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_topics_owner_id'), ['owner_id'], unique=False)

    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('UPLOADED', 'PROCESSING', 'PROCESSED', 'ERROR', name='documentstatus'), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('file_metadata', sa.JSON(), nullable=True),
    sa.Column('vector_dim', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.create_index('idx_document_topic_status', ['topic_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_documents_topic_id'), ['topic_id'], unique=False)

    op.create_table('flashcards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('front', sa.Text(), nullable=False),
    sa.Column('back', sa.Text(), nullable=False),
    sa.Column('flashcard_metadata', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_reviewed', sa.DateTime(), nullable=True),
    sa.Column('next_review', sa.DateTime(), nullable=True),
    sa.Column('ease_factor', sa.Float(), nullable=False),
    sa.Column('review_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('flashcards', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_flashcards_topic_id'), ['topic_id'], unique=False)

    op.create_table('qa_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('qa_metadata', sa.JSON(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('qa_history', schema=None) as batch_op:
        batch_op.create_index('idx_qa_topic_user', ['topic_id', 'user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_qa_history_topic_id'), ['topic_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_qa_history_user_id'), ['user_id'], unique=False)

    op.create_table('document_chunks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('chunk_metadata', sa.JSON(), nullable=True),
    sa.Column('embedding', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'chunk_index', name='uq_chunk_document_index')
    )
    with op.batch_alter_table('document_chunks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_chunks_document_id'), ['document_id'], unique=False)

    op.create_table('flashcard_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('flashcard_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('quality', sa.Integer(), nullable=False),
    sa.Column('ease_factor', sa.Float(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.Column('review_date', sa.DateTime(), nullable=False),
    sa.Column('next_review', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['flashcard_id'], ['flashcards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('flashcard_reviews', schema=None) as batch_op:
        batch_op.create_index('idx_flashcard_review_user', ['flashcard_id', 'user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_flashcard_reviews_flashcard_id'), ['flashcard_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_flashcard_reviews_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('flashcard_reviews', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_flashcard_reviews_user_id'))
        batch_op.drop_index(batch_op.f('ix_flashcard_reviews_flashcard_id'))
        batch_op.drop_index('idx_flashcard_review_user')

    op.drop_table('flashcard_reviews')
    with op.batch_alter_table('document_chunks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_chunks_document_id'))

    op.drop_table('document_chunks')
    with op.batch_alter_table('qa_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_qa_history_user_id'))
        batch_op.drop_index(batch_op.f('ix_qa_history_topic_id'))
        batch_op.drop_index('idx_qa_topic_user')

    op.drop_table('qa_history')
    with op.batch_alter_table('flashcards', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_flashcards_topic_id'))

    op.drop_table('flashcards')
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_documents_topic_id'))
        batch_op.drop_index('idx_document_topic_status')

    op.drop_table('documents')
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_topics_owner_id'))

    op.drop_table('topics')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
